// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The DialogManager component renders OUDimension content with display:none when previously mounted 1`] = `
<Fragment>
  <Modal
    dataTest="dialog-manager-undefined"
    large={true}
    onClose={[Function]}
    position="top"
  >
    <ModalTitle
      dataTest="dialog-manager-modal-title"
    >
      Organisation units
    </ModalTitle>
    <ModalContent
      dataTest="dialog-manager-modal-content"
    >
      <div
        key="ou"
        style={
          Object {
            "display": "block",
          }
        }
      >
        <OrgUnitDimension
          onSelect={[Function]}
          ouItems={Array []}
        />
      </div>
    </ModalContent>
    <ModalActions
      dataTest="dialog-manager-modal-actions"
    >
      <ButtonStrip
        dataTest="dhis2-uicore-buttonstrip"
      >
        <HideButton
          dataTest="dialog-manager-modal-action-cancel"
          onClick={[Function]}
        />
        <Connect(UpdateVisualizationContainer)
          renderComponent={[Function]}
        />
      </ButtonStrip>
    </ModalActions>
  </Modal>
</Fragment>
`;

exports[`The DialogManager component renders OUDimension content with display:none when previously mounted 2`] = `<Fragment />`;

exports[`The DialogManager component renders OUDimension content with display:none when previously mounted 3`] = `
<Fragment>
  <Modal
    dataTest="dialog-manager-undefined"
    large={true}
    onClose={[Function]}
    position="top"
  >
    <ModalTitle
      dataTest="dialog-manager-modal-title"
    >
      Data
    </ModalTitle>
    <ModalContent
      dataTest="dialog-manager-modal-content"
    >
      <div
        key="ou"
        style={
          Object {
            "display": "none",
          }
        }
      >
        <OrgUnitDimension
          onSelect={[Function]}
          ouItems={Array []}
        />
      </div>
      <DataDimension
        onSelect={[Function]}
        selectedDimensions={Array []}
      />
    </ModalContent>
    <ModalActions
      dataTest="dialog-manager-modal-actions"
    >
      <ButtonStrip
        dataTest="dhis2-uicore-buttonstrip"
      >
        <HideButton
          dataTest="dialog-manager-modal-action-cancel"
          onClick={[Function]}
        />
        <Connect(UpdateVisualizationContainer)
          renderComponent={[Function]}
        />
      </ButtonStrip>
    </ModalActions>
  </Modal>
</Fragment>
`;

exports[`The DialogManager component renders a closed dialog 1`] = `<Fragment />`;

exports[`The DialogManager component renders the DataDimension content in dialog 1`] = `
<Fragment>
  <Modal
    dataTest="dialog-manager-undefined"
    large={true}
    onClose={[Function]}
    position="top"
  >
    <ModalTitle
      dataTest="dialog-manager-modal-title"
    >
      Data
    </ModalTitle>
    <ModalContent
      dataTest="dialog-manager-modal-content"
    >
      <DataDimension
        onSelect={[Function]}
        selectedDimensions={Array []}
      />
    </ModalContent>
    <ModalActions
      dataTest="dialog-manager-modal-actions"
    >
      <ButtonStrip
        dataTest="dhis2-uicore-buttonstrip"
      >
        <HideButton
          dataTest="dialog-manager-modal-action-cancel"
          onClick={[Function]}
        />
        <Connect(UpdateVisualizationContainer)
          renderComponent={[Function]}
        />
      </ButtonStrip>
    </ModalActions>
  </Modal>
</Fragment>
`;

exports[`The DialogManager component renders the OrgUnitDimension content in dialog 1`] = `
<Fragment>
  <Modal
    dataTest="dialog-manager-undefined"
    large={true}
    onClose={[Function]}
    position="top"
  >
    <ModalTitle
      dataTest="dialog-manager-modal-title"
    >
      Organisation units
    </ModalTitle>
    <ModalContent
      dataTest="dialog-manager-modal-content"
    >
      <div
        key="ou"
        style={
          Object {
            "display": "block",
          }
        }
      >
        <OrgUnitDimension
          onSelect={[Function]}
          ouItems={Array []}
        />
      </div>
    </ModalContent>
    <ModalActions
      dataTest="dialog-manager-modal-actions"
    >
      <ButtonStrip
        dataTest="dhis2-uicore-buttonstrip"
      >
        <HideButton
          dataTest="dialog-manager-modal-action-cancel"
          onClick={[Function]}
        />
        <Connect(UpdateVisualizationContainer)
          renderComponent={[Function]}
        />
      </ButtonStrip>
    </ModalActions>
  </Modal>
</Fragment>
`;

exports[`The DialogManager component renders the PeriodDimension content in dialog 1`] = `
<Fragment>
  <Modal
    dataTest="dialog-manager-undefined"
    large={true}
    onClose={[Function]}
    position="top"
  >
    <ModalTitle
      dataTest="dialog-manager-modal-title"
    >
      Period
    </ModalTitle>
    <ModalContent
      dataTest="dialog-manager-modal-content"
    >
      <PeriodDimension
        onSelect={[Function]}
        selectedPeriods={Array []}
      />
    </ModalContent>
    <ModalActions
      dataTest="dialog-manager-modal-actions"
    >
      <ButtonStrip
        dataTest="dhis2-uicore-buttonstrip"
      >
        <HideButton
          dataTest="dialog-manager-modal-action-cancel"
          onClick={[Function]}
        />
        <Connect(UpdateVisualizationContainer)
          renderComponent={[Function]}
        />
      </ButtonStrip>
    </ModalActions>
  </Modal>
</Fragment>
`;
